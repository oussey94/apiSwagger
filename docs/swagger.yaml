basePath: /api/v1
definitions:
  models.Post:
    properties:
      body:
        type: string
      id:
        type: integer
      title:
        type: string
    type: object
host: localhost:3000
info:
  contact:
    email: mbodjiousseynou94@gmail.com
    name: mbodji ousseynonu
    url: https://twitter.com/weuz
  description: A post management service API in Go using Gin framework.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://tos.santoshk.dev
  title: Gin_Go Poststore API
  version: "1.0"
paths:
  /posts:
    get:
      description: Responds with the list of all posts as JSON.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Post'
            type: array
      summary: Get posts array
      tags:
      - posts
    post:
      description: Takes a post JSON and store in DB. Return saved JSON.
      parameters:
      - description: Add Post JSON
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/models.Post'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Post'
      summary: Store a new post
      tags:
      - posts
  /posts/{id}:
    delete:
      consumes:
      - application/json
      description: Delete by account ID
      parameters:
      - description: post ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/models.Post'
      summary: Delete an account
      tags:
      - posts
    get:
      description: get string by ID
      parameters:
      - description: post ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Post'
      summary: Show a post
      tags:
      - posts
    put:
      consumes:
      - application/json
      description: Update by json post
      parameters:
      - description: post ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update post
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/models.Post'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Post'
      summary: Update a post
      tags:
      - posts
swagger: "2.0"
