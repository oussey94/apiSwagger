{
    "swagger": "2.0",
    "info": {
        "description": "A post management service API in Go using Gin framework.",
        "title": "Gin_Go Poststore API",
        "termsOfService": "https://tos.santoshk.dev",
        "contact": {
            "name": "mbodji ousseynonu",
            "url": "https://twitter.com/weuz",
            "email": "mbodjiousseynou94@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:3000",
    "basePath": "/api/v1",
    "paths": {
        "/posts": {
            "get": {
                "description": "Responds with the list of all posts as JSON.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Get posts array",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Post"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Takes a post JSON and store in DB. Return saved JSON.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Store a new post",
                "parameters": [
                    {
                        "description": "Add Post JSON",
                        "name": "post",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Post"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Post"
                        }
                    }
                }
            }
        },
        "/posts/{id}": {
            "get": {
                "description": "get string by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Show a post",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "post ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Post"
                        }
                    }
                }
            },
            "put": {
                "description": "Update by json post",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Update a post",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "post ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update post",
                        "name": "post",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Post"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Post"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete by account ID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Delete an account",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "post ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/models.Post"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Post": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        }
    }
}